name: service-platform-sql

services:
  servicecontrol:
    image: particular/servicecontrol:${SERVICECONTROL_TAG}
    env_file: .env
    ports:
      - "33333:33333"
    environment:
      RAVENDB_CONNECTIONSTRING: http://servicecontrol-db:8080
      REMOTEINSTANCES: '[{"api_uri":"http://servicecontrol-audit:44444/api"}]'
    command: --setup-and-run
    restart: unless-stopped
    depends_on:
      servicecontrol-db:
        condition: service_healthy
      sqlserver:
        condition: service_healthy

  # WARNING: A single database container should not be shared between multiple ServiceControl instances in production scenarios.
  servicecontrol-db:
    image: particular/servicecontrol-ravendb:${SERVICECONTROL_TAG}
    ports:
      - "8080:8080"
    volumes:
      - raven-config:/var/lib/ravendb/config
      - raven-data:/var/lib/ravendb/data

  servicecontrol-audit:
    image: particular/servicecontrol-audit:${SERVICECONTROL_TAG}
    env_file: .env
    ports:
      - "44444:44444"
    environment:
      RAVENDB_CONNECTIONSTRING: http://servicecontrol-db:8080
    command: --setup-and-run
    restart: unless-stopped
    depends_on:
      servicecontrol-db:
        condition: service_healthy
      sqlserver:
        condition: service_healthy

  servicecontrol-monitoring:
    image: particular/servicecontrol-monitoring:${SERVICECONTROL_TAG}
    env_file: .env
    restart: unless-stopped
    command: --setup-and-run
    ports:
      - "33633:33633"
    depends_on:
      sqlserver:
        condition: service_healthy

  servicepulse:
    image: particular/servicepulse:${SERVICEPULSE_TAG}
    ports:
      - "9090:9090"
    environment:
      SERVICECONTROL_URL: http://servicecontrol:33333
      MONITORING_URL: http://servicecontrol-monitoring:33633
    restart: unless-stopped
    depends_on:
      servicecontrol:
        condition: service_healthy
      servicecontrol-monitoring:
        condition: service_healthy
      sqlserver:
        condition: service_healthy

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MyPassword1234!
      - MSSQL_PID=Developer
    ports:
      - 1433:1433
    volumes:
      - sqlserver-data:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -C -S sqlserver -U sa -P MyPassword1234! -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools18/bin/sqlcmd -C -S sqlserver -U sa -P MyPassword1234! -d master -i docker-entrypoint-initdb.d/init.sql;
      echo "All done!";
      '

volumes:
  sqlserver-data:
  raven-config:
  raven-data:
